@model IEnumerable<RepositorioDocumentos.Models.Permission>

@{
    ViewBag.Title = "Permisos";
}

<link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
<link href="~/Content/toastr.css" rel="stylesheet" type="text/css" />
<link href="~/Content/dataTables.bootstrap4.min.css" rel="stylesheet" />

<div class="container-fluid">
    <section class="text-dark border-custom border">
        <div class="bg-secondary text-light panel-custom border">
            <h6 class="panel-title">
                Permisos
            </h6>
        </div>

        <div class="mt-3 ml-2 mr-2">
            <a href="javascript:void(0);" class="btn btn-danger btn-sm btn-new">Nuevo permiso</a>
            <table id="permissionTable" class="table table-striped table-bordered table-condensed table-sm mt-1">
                <thead>
                    <tr>
                        <th class="text-center">
                            Id
                        </th>
                        <th style="min-width: 100px">
                            Usuario
                        </th>
                        <th>
                            Dirección
                        </th>
                        <th>
                            Departamento
                        </th>
                        <th>
                            Creado en
                        </th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td class="text-center field-id">@item.Id</td>
                            <td class="field-user">@item.User.Email</td>
                            <td class="field-directorate">@item.Directorate.Description</td>
                            <td class="field-department">@(item.Department == null? "TODOS" : item.Department.DeptoName)</td>
                            <td class="field-created">@item.CreatedDate</td>

                            <td align="center">
                                @*<a class="btn btn-sm btn-success edit-btn edit-button-width" href="javascript:void(0)" title="Editar">
                Editar
            </a>*@
                                <a class="btn btn-sm btn-danger btn-remove" href="javascript:void(0)" title="Eliminar">
                                    Eliminar
                                </a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </section>
</div>

@section scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script src="~/Scripts/jquery.dataTables.min.js"></script>
    <script src="~/Scripts/dataTables.bootstrap4.min.js"></script>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
    <script src="~/Scripts/toastr.js"></script>

}
<script type="text/javascript">

    $(document).ready(function () {
        $("#Permisos").addClass("menu-active");
        $("#permissionTable").DataTable();

        $('.btn-new').click(function () {
            if (!$('.save-btn')[0]) {
                //Usuarios
                let _users = @Html.Raw(Json.Encode(ViewBag.Users));
                let users = [];

                for (const user of _users) {
                    users.push(`<option value="${user.Value}">${user.Text}</option>`)
                }

                //Direcciones
                let _directorates = @Html.Raw(Json.Encode(ViewBag.Direcciones));
                let directorates = [];

                for (const directorate of _directorates) {
                    directorates.push(`<option value="${directorate.Value}">${directorate.Text}</option>`)
                }

                const departments = [];
                
                const newRowHtml = '<tr>' +
                    '<td class="text-center">##</td>' +
                    `<td class="field-user-new">` +
                    `<select class="form-control form-control-sm col-12 new-user" id="user-id"> ${users} </select>` +
                    `</td>` +
                    `<td class="field-directorate-new">` +
                    `<select class="form-control form-control-sm new-directorate" id="directorate-id"> ${directorates} </select>` +
                    `</td>` +
                    `<td class="field-department-new">` +
                    `<select class="form-control form-control-sm new-department" id="department-id"> ${departments} </select>` +
                    `</td>` +
                    '<td class="text-center">' +
                    `</td>` +
                    '<td class="text-center">' +
                    '<button class="btn btn-sm btn-success save-btn">Guardar</button>' +
                    '<button class="btn btn-sm btn-danger cancel-btn">Cancelar</button>' +
                    '</td>' +
                    '</tr>';

                $('#permissionTable tbody').prepend(newRowHtml);

                $("#directorate-id").on('change', function (evt) {

                    $.ajax({
                        "url": `/Departamento/getDepartmentsByDirectorateId?directorateId=${evt.currentTarget.value}`,
                        "type": "POST",
                        "success": function (response) {
                            if (response.result === "200") {
                                //Re-render departments
                                $("#department-id").empty();
                       
                                for (const option of response.message) {
                                    if (!option.Value)
                                        $('#department-id').append($(`<option value="${option.Value}">TODOS</option>`));
                                    else
                                        $('#department-id').append($(`<option value="${option.Value}">${option.Text}</option>`));
                                }
                            } else {
                                toastr.error(response.message);
                            }
                        }
                    });
                });
            }
        });

        $(document).on('click', '.save-btn', function () {
            const userId = $(this).closest('tr').find('.new-user').val();
            const directorateId = $(this).closest('tr').find('.new-directorate').val();
            let deptoCode = $(this).closest('tr').find('.new-department').val();
            deptoCode = !deptoCode ? 0 : deptoCode;

            if (!userId || !directorateId) {
                toastr.error("Debe completar los campos requeridos para guardar el registro.");
                return false;
            }

            $.ajax({
                "url": `/Permiso/AddPermissionUser?userId=${userId}&directorateId=${directorateId}&deptoCode=${deptoCode}`,
                "type": "POST",
                "success": function (response) {
                    if (response.result === "200") {
                        toastr.success(`El registro fue agregado!`);
                        setTimeout(function () {
                            window.location.reload(true);
                        }, 1000);
                    } else {
                        toastr.error(response.message);
                    }
                }
            });
        });

        $(document).on('click', '.cancel-btn', function () {
            $(this).closest('tr').remove();
        });

        //$('#permissionTable').on('click', '.edit-btn', function () {
        //    var editButton = $(this);

        //    if (editButton.prop('title') === "Editar") {
        //        editButton.prop('title', 'Guardar');
        //        editButton.html("Guardar");
        //        editButton.closest('tr').find('.btn-remove').html("Cancelar");
        //        editButton.closest('tr').find('.btn-remove').prop("title", "Cancelar");

        //        const description = editButton.closest('tr').find('.field-description').text();

        //        editButton.closest('tr').find('.field-description').html('<input type="text" maxlength="20" min="3" class="form-control form-control-sm edit-description" value="' + description + '">');

        //    } else {
        //        const id = editButton.closest('tr').find('.field-id').text();
        //        const description = editButton.closest('tr').find('.edit-description').val();

        //        if (!description) {
        //            toastr.error("El campo código no puede estar vacio.");
        //            return false;
        //        }

        //        $.ajax({
        //            "url": `/DocumentoCodigo/UpdateDocumentCode?id=${id}&description=${description}`,
        //            "type": "POST",
        //            "success": function (response) {
        //                if (response.result === "200") {
        //                    toastr.success(`El registro #${id} fue actualizado!`);
        //                    editButton.prop('title', 'Editar');
        //                    editButton.closest('tr').find('.field-description').text(description);

        //                    editButton.html("Editar");
        //                    editButton.closest('tr').find('.btn-remove').html("Eliminar");
        //                    editButton.closest('tr').find('.btn-remove').prop("title", "Eliminar");
        //                } else {
        //                    toastr.error(response.message);
        //                }
        //            }
        //        });
        //    }
        //});

        $('#permissionTable').on('click', '.btn-remove', function () {
            var removeButton = $(this);

            if (removeButton.html() === "Cancelar") {
                window.location.reload(true);
            } else {
                const id = removeButton.closest('tr').find('.field-id').text();
              
                if (confirm(`Confirma que desea eliminar el permiso ID #: ${id}`)) {
                    $.ajax({
                        "url": `/Permiso/DeletePermissionUser?id=${id}`,
                        "type": "POST",
                        "success": function (response) {
                            if (response.result === "200") {
                                toastr.success(`El registro #${id} fue eliminado!`);
                                setTimeout(function () {
                                    window.location.reload(true);
                                }, 1000);
                            } else {
                                toastr.error(response.message);
                            }
                        }
                    });
                }
            }
        });

        //Replace Previous -> Anterior
        $('body :not(script)').contents().filter(function () {
            return this.nodeType === 3;
        }).replaceWith(function () {
            return this.nodeValue.replace('Previous', 'Anterior');
        });

        //Replace Next -> Próximo
        $('body :not(script)').contents().filter(function () {
            return this.nodeType === 3;
        }).replaceWith(function () {
            return this.nodeValue.replace('Next', 'Próximo');
        });

        //Replace Showing -> Mostrando
        $('body :not(script)').contents().filter(function () {
            return this.nodeType === 3;
        }).replaceWith(function () {
            return this.nodeValue.replace('Showing', 'Mostrando');
        });

        //Replace Show -> Mostrar
        $('body :not(script)').contents().filter(function () {
            return this.nodeType === 3;
        }).replaceWith(function () {
            return this.nodeValue.replace('Show', 'Mostrar');
        });

        //Replace Entries -> Registros
        $('body :not(script)').contents().filter(function () {
            return this.nodeType === 3;
        }).replaceWith(function () {
            return this.nodeValue.replace('entries', 'registros');
        });

        //Replace Search -> Buscar
        $('body :not(script)').contents().filter(function () {
            return this.nodeType === 3;
        }).replaceWith(function () {
            return this.nodeValue.replace('Search', 'Buscar');
        });
    });
</script>
