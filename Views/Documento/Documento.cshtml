
@{
    ViewBag.Title = "Documento";
}

<link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
<link href="~/Content/toastr.css" rel="stylesheet" type="text/css" />
<link href="https://cdn.jsdelivr.net/npm/quill@2.0.2/dist/quill.snow.css" rel="stylesheet" />

<style>
    p {
        color: black;
    }
</style>
<div class="container-fluid">
    <section class="bg-light text-dark border-custom">
        <div class="bg-secondary text-light panel-custom border">
            <h6 class="panel-title">
                Documento -> Cabecera
            </h6>
        </div>

        <section class="mt-3">
            <input type="hidden" name="DocumentHeaderId" id="DocumentHeaderId" value="0" />

            <div class="row mb-3">
                <section class="col-xl-3 col-md-3 col-sm-12">
                    <div class="row">
                        <div class="col-12 mb-1">
                            <label for="DocumentTypeId">Tipo de Documento</label>
                            @Html.DropDownList("DocumentTypeId", new SelectList(ViewBag.DocumentoTipos, "Value", "Text"), new
                              {
                                  @class = "form-control form-control-sm col-12",
                                  @style = "border: 1px solid lightgray; color: gray;"
                              })
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-12 mb-1">
                            <label for="DocumentCode">Código Documento</label>
                            @Html.DropDownList("DocumentCode", new SelectList(ViewBag.DocumentoCodigos, "Value", "Text"), new
                              {
                                  @class = "form-control form-control-sm col-12",
                                  @style = "border: 1px solid lightgray; color: gray;"
                              })
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-12 mb-1">
                            <label for="Revision">Revisión</label>
                            <input type="text" id="Revision" name="Revision" value="" class="form-control form-control-sm col-12" />
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-12 mb-1">
                            <label for="docDate">Fecha</label>
                            <input type="text" id="docDate" name="docDate" value="" class="form-control form-control-sm col-12 datepicker" />
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-12 mb-1">
                            <label for="Logo">Logo</label>
                            <input type="text" id="Logo" name="Logo" value="Predeterminado" class="form-control form-control-sm col-12" readonly />
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-12 mb-1">
                            <label for="Status">Estatus</label>
                            <input type="text" id="Status" name="Status" value="Iniciado" class="form-control form-control-sm col-12" readonly />
                        </div>
                    </div>

                </section>

                <!--SECOND SECTION HEADER-->
                <section class="col-xl-9 col-md-9 col-sm-12" style="border-left: 3px solid lightgray">
                    <div class="row">
                        <div class="col-xl-11 col-md-11 col-sm-12 col- mb-1">
                            <label for="Title">Título</label>
                            <input type="text" id="Title" name="Title" value="" class="form-control form-control-sm col-12" />
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-xl-11 col-md-11 col-sm-12 col- mb-1">
                            <label for="DirectorateId">Dirección</label>
                            @Html.DropDownList("DirectorateId", new SelectList(ViewBag.Direcciones, "Value", "Text"), new
                               {
                                   @class = "form-control form-control-sm col-12",
                                   @style = "border: 1px solid lightgray; color: gray;",
                                   @onchange = "getAreasByDirectorateId($('#DirectorateId').val())"
                               })
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-xl-11 col-md-11 col-sm-12 col- mb-1">
                            <label for="AreaId">Area</label>
                            @Html.DropDownList("AreaId", new SelectList(ViewBag.Areas, "Value", "Text"), new
                               {
                                   @class = "form-control form-control-sm col-12",
                                   @style = "border: 1px solid lightgray; color: gray;",
                                   @onchange = "getDepartmentsByAreaId($('#AreaId').val())"
                               })
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-xl-11 col-md-11 col-sm-12 col- mb-1">
                            <label for="DepartmentCode">Departamento</label>
                            @Html.DropDownList("DepartmentCode", new SelectList(ViewBag.Departamentos, "Value", "Text"), new
                              {
                                  @class = "form-control form-control-sm col-12",
                                  @style = "border: 1px solid lightgray; color: gray;"
                              })
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-xl-11 col-md-11 col-sm-12 col- mb-1">
                            <label for="MacroprocessId">Macroproceso</label>
                            @Html.DropDownList("MacroprocessId", new SelectList(ViewBag.Macroprocesos, "Value", "Text"), new
                               {
                                   @class = "form-control form-control-sm col-12",
                                   @style = "border: 1px solid lightgray; color: gray;",
                                   @onchange = "getProcessesByMacroprocessId($('#MacroprocessId').val())"
                               })
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-xl-11 col-md-11 col-sm-12 col- mb-1">
                            <label for="ProcessId">Proceso</label>
                            @Html.DropDownList("ProcessId", new SelectList(ViewBag.Procesos, "Value", "Text"), new
                              {
                                  @class = "form-control form-control-sm col-12",
                                  @style = "border: 1px solid lightgray; color: gray;"
                              })
                        </div>
                    </div>
                </section>

                <section class="col-12 mt-4">
                    <div class="row">
                        <div class="col-12 mb-1">
                            <label for="Objective">Objetivo</label>
                            <textarea type="tex" id="Objective" name="Objective" class="form-control form-control-sm col-12" rows="3"></textarea>
                        </div>
                    </div>
                </section>

            </div>

            <button id="btnNext" class="btn btn-danger col-12 mt-2 mb-2">Presione aquí para continuar</button>

        </section>
    </section>

    <!--Contenido-->
    <section class="bg-light text-dark border-custom mb-4 mt-3" id="sectionContent">
        <div class="bg-secondary text-light panel-custom border">
            <h6 class="panel-title" id="contentLabel">
                Contenido
            </h6>
        </div>
        <div id="contenidoBody" style="min-height: 100px"><h4></h4></div>
    </section>

    <!--Alcance-->
    <section class="bg-light text-dark border-custom mb-4" id="sectionScope">
        <div class="bg-secondary text-light panel-custom border">
            <h6 class="panel-title">
                Alcance
            </h6>
        </div>
        <textarea type="tex" id="Scope" name="Scope" class="form-control form-control-sm col-12"></textarea>
    </section>

    <!--Responsabilidades-->
    <section class="bg-light text-dark border-custom mb-4" id="sectionResponsabilities">
        <div class="bg-secondary text-light panel-custom border">
            <h6 class="panel-title">
                Responsabilidades
            </h6>
        </div>
        <div id="responsabilitiesBody" style="min-height: 100px"><h4></h4></div>
    </section>

    <button id="btnDetail" class="btn btn-danger col-12 mb-4 btnDetail">Guardar cambios en el detalle</button>

    <!--Glosario-->
    <section class="bg-light text-dark border-custom mb-4" id="sectionGlossary">
        <div class="bg-secondary text-light panel-custom border">
            <h6 class="panel-title">
                Glosario
            </h6>
        </div>
        <div class="mt-3 ml-2 mr-2">
            <a href="javascript:void(0);" class="btn btn-danger btn-sm btn-new-glossary">Nuevo Registro</a>
            <table id="glossaryTable" class="table table-striped table-bordered table-condensed table-sm mt-1">
                <thead class="bg-warning">
                    <tr>
                        <th style="width:300px">
                            Palabra
                        </th>
                        <th>
                            Descripción
                        </th>
                        <th class="action-column"></th>
                    </tr>
                </thead>
                <tbody id="glossary-tbody">
                    <tr hidden="hidden">
                        <td></td>
                        <td></td>

                        <td align="center">
                            <a class="btn btn-sm btn-success edit-btn" href="javascript:void(0)" title="Editar">
                                Editar
                            </a>
                            <a class="btn btn-sm btn-danger btn-remove" href="javascript:void(0)" title="Eliminar">
                                Eliminar
                            </a>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </section>

    <!--Directrices-->
    <section class="bg-light text-dark border-custom mb-4" id="sectionGuideline">
        <div class="bg-secondary text-light panel-custom border">
            <h6 class="panel-title">
                Directrices
            </h6>
        </div>
        <div class="mt-3 ml-2 mr-2">
            <a href="javascript:void(0);" class="btn btn-danger btn-sm btn-new-glossary">Nueva Directriz</a>
            <table id="guidelineTable" class="table table-striped table-bordered table-condensed table-sm mt-1">
                <thead class="bg-warning">
                    <tr>
                        <th style="width:300px">
                            #
                        </th>
                        <th>
                            Descripción
                        </th>
                        <th class="action-column"></th>
                    </tr>
                </thead>
                <tbody id="guideline-tbody">
                    <tr hidden="hidden">
                        <td></td>
                        <td></td>

                        <td align="center">
                            <a class="btn btn-sm btn-success edit-btn" href="javascript:void(0)" title="Editar">
                                Editar
                            </a>
                            <a class="btn btn-sm btn-danger btn-remove" href="javascript:void(0)" title="Eliminar">
                                Eliminar
                            </a>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </section>

    <!--Politica-->
    <section class="bg-light text-dark border-custom mb-4" id="sectionPolicy">
        <div class="bg-secondary text-light panel-custom border">
            <h6 class="panel-title">
                Politica
            </h6>
        </div>
        <div id="policyBody" style="min-height: 100px"><h4></h4></div>
    </section>

    <button class="btn btn-danger col-12 mb-4 btnDetail">Guardar cambios en la política</button>

    <!--Procedimiento-->
    <section class="bg-light text-dark border-custom mb-4" id="sectionProcedure">
        <div class="bg-secondary text-light panel-custom border">
            <h6 class="panel-title">
                Procedimientos
            </h6>
        </div>
        <div class="mt-3 ml-2 mr-2">
            <a href="javascript:void(0);" class="btn btn-danger btn-sm btn-new-procedurre">Nuevo Procedimiento</a>
            <table id="procedureTable" class="table table-striped table-bordered table-condensed table-sm mt-1">
                <thead>
                    <tr>
                        <th class="text-center">
                            #
                        </th>
                        <th>
                            Responsable
                        </th>
                        <th>
                            Descripción
                        </th>
                        <th class="action-column"></th>
                    </tr>
                </thead>
                <tbody>
                </tbody>
            </table>
        </div>
    </section>

    <!--Referencias o Anexos-->
    <section class="bg-light text-dark border-custom mb-4" id="sectionReference">
        <div class="bg-secondary text-light panel-custom border">
            <h6 class="panel-title">
                Referencias o Anexos
            </h6>
        </div>
        <div class="mt-3 ml-2 mr-2" id="referencesBody">
            <a href="javascript:void(0);" class="btn btn-danger btn-sm btn-new-reference">Agregar referencia</a>
        </div>
    </section>

    <!--Notificacion de Cambios-->
    <section class="bg-light text-dark border-custom mb-4" id="sectionChange">
        <div class="bg-secondary text-light panel-custom border">
            <h6 class="panel-title">
                Notificación de Cambios
            </h6>
        </div>
        <div class="mt-3 ml-2 mr-2">
            <a href="javascript:void(0);" class="btn btn-danger btn-sm btn-new-change">Nuevo Registro</a>
            <table id="changeTable" class="table table-striped table-bordered table-condensed table-sm mt-1">
                <thead>
                    <tr>
                        <th class="text-center">
                            #
                        </th>
                        <th>
                            Fecha
                        </th>
                        <th>
                            Revisión
                        </th>
                        <th>
                            Paginas Afectadas
                        </th>
                        <th>
                            Originador
                        </th>
                        <th>
                            Naturaleza del cambio
                        </th>

                        <th class="action-column"></th>
                    </tr>
                </thead>
                <tbody>
                </tbody>
            </table>
        </div>
    </section>

    <!--Aprobacion-->
    <section class="bg-light text-dark border-custom mb-4" id="sectionApproval">
        <div class="bg-secondary text-light panel-custom border">
            <h6 class="panel-title">
                Aprobación
            </h6>
        </div>
        <div class="mt-3 ml-2 mr-2">
            <a href="javascript:void(0);" class="btn btn-danger btn-sm btn-new-approval">Nuevo Registro</a>
            <table id="approvalTable" class="table table-striped table-bordered table-condensed table-sm mt-1">
                <thead>
                    <tr>
                        <th class="text-center">
                            Elaborado por
                        </th>
                        <th>
                            Gerente del Area
                        </th>
                        <th>
                            Director del Area
                        </th>
                        <th class="action-column"></th>
                    </tr>
                </thead>
                <tbody>
                </tbody>
            </table>
        </div>
    </section>
</div>

@section scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script src="~/Scripts/jquery.dataTables.min.js"></script>
    <script src="~/Scripts/dataTables.bootstrap4.min.js"></script>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
    <script src="~/Scripts/toastr.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/quill@2.0.2/dist/quill.js"></script>
}
<script type="text/javascript">

    $(document).ready(async function () {
        //Variables
        var wordGlossaryEditing = "";
        var descriptionGlossaryEditing = "";

        $("#Documents").addClass("menu-active");
        $("#sectionContent").hide();
        $("#sectionScope").hide();
        $("#sectionResponsabilities").hide();
        $("#sectionGlossary").hide();
        $("#sectionGuideline").hide();
        $("#sectionPolicy").hide();
        $("#sectionProcedure").hide();
        $("#sectionReference").hide();
        $("#sectionChange").hide();
        $("#sectionApproval").hide();
       
        $(".btnDetail").hide();

        var toolbarOptions = [
             ['bold', 'italic', 'underline', 'strike'],        // toggled buttons
   
             [{ 'header': 1 }, { 'header': 2 }],               // custom button values
             [{ 'list': 'ordered' }, { 'list': 'bullet' }, { 'list': 'check' }],
             [{ 'script': 'sub' }, { 'script': 'super' }],      // superscript/subscript
             [{ 'indent': '-1' }, { 'indent': '+1' }],          // outdent/indent
             [{ 'direction': 'rtl' }],                         // text direction

             [{ 'size': ['small', false, 'large', 'huge'] }],  // custom dropdown
             [{ 'header': [1, 2, 3, 4, 5, 6, false] }],

             [{ 'color': [] }, { 'background': [] }],          // dropdown with defaults from theme
             [{ 'font': [] }],
             [{ 'align': [] }],

             ['clean'],
         ];

        var quill_contenidoBody = new Quill('#contenidoBody', {
             modules: {
                 toolbar: toolbarOptions
             },
             theme: 'snow'
         });

        var quill_responsabilitiesBody = new Quill('#responsabilitiesBody', {
            modules: {
                toolbar: toolbarOptions
            },
            theme: 'snow'
        });

        var quill_policyBody = new Quill('#policyBody', {
            modules: {
                toolbar: toolbarOptions
            },
            theme: 'snow'
        });
        
         //$("#contenidoBody .ql-editor").html()

        $(".datepicker").datepicker(
            {
                dateFormat: 'dd/mm/yy',
                //beforeShowDay: $.datepicker.noWeekends
            }
        );

        const _documentHeaderId = new URLSearchParams(window.location.search).get('id');

        if (_documentHeaderId) {
            $("#DocumentHeaderId").val(_documentHeaderId);
            await getDocument(_documentHeaderId, quill_contenidoBody, quill_responsabilitiesBody, quill_policyBody);
        }

        $("#btnNext").click(function (evt) {

            const _validateFields = validateFields();
            if (_validateFields) {
                toastr.error(_validateFields);
                return false;
            }

            const documentHeader = {
                Id: $("#DocumentHeaderId").val(),
                DocumentTypeId: $("#DocumentTypeId").val(),
                Status: $("#Status").val(),
                Image: $("#Logo").val(),
                Code: $("#DocumentCode :selected").text(),
                Revision: $("#Revision").val(),
                Date: GetEnglishDate($("#docDate").val()),
                Title: $("#Title").val(),
                DirectorateId: $("#DirectorateId").val(),
                DepartmentCode: $("#DepartmentCode").val(),
                AreaId: $("#AreaId").val(),
                MacroprocessId: $("#MacroprocessId").val(),
                ProcessId: $("#ProcessId").val(),
                Objective: $("#Objective").val()
            }

            console.log('documentHeader:', documentHeader)

            $.ajax({
                url: "/Documento/SaveDocumentHeader",
                type: "POST",
                data: documentHeader
            }).done(function (data) {
                if (data.result === "200") {
                    console.log('Document HEADER saved:', data)
                    applyChangesAccordingToDocumentType();
                    prepareNextSection();
                    $(".btnDetail").show();

                    if (!$("#DocumentHeaderId").val())
                        $("#DocumentHeaderId").val(data.message.Id)

                    toastr.success("El documento fue guardado. Favor continuar");
                } else {
                    toastr.error(data.message);
                }
            });
        });

        $(".btnDetail").click(function (evt) {
            evt.preventDefault();
            evt.stopPropagation();

            saveDocumentContent(quill_contenidoBody);
            saveDocumentDetail(quill_responsabilitiesBody, quill_policyBody);
        });

        //GLOSSARY SECTION
        $('.btn-new-glossary').click(function () {
            if (!$('.save-glossary-btn')[0]) {
                const newRowHtml = '<tr>' +
                    '<td class="field-word-glossary-new"><input type="text" maxlength="50" min="3" class="form-control form-control-sm new-word-glossary"></td>' +
                    '<td class="field-description-glossary-new"><input type="text" maxlength="800" min="3" class="form-control form-control-sm col-12 new-description-glossary" placeholder="Escribir descripción"></td>' +
                    '<td class="text-center">' +
                    '<button class="btn btn-sm btn-success save-glossary-btn">Guardar</button>' +
                    '<button class="btn btn-sm btn-danger cancel-glossary-btn">Cancelar</button>' +
                    '</td>' +
                    '</tr>';

                $('#glossaryTable tbody').prepend(newRowHtml);
            }
        });

        $(document).on('click', '.save-glossary-btn', function () {
            var word = $(this).closest('tr').find('.new-word-glossary').val();
            var description = $(this).closest('tr').find('.new-description-glossary').val();
            const documentHeaderId = $("#DocumentHeaderId").val();

            if (!word || !description) {
                toastr.error("Debe completar todos los campos.");
                return false;
            }

            $.ajax({
                "url": `/Documento/AddGlossary?documentHeaderId=${documentHeaderId}&word=${word}&description=${description}`,
                "type": "POST",
                "success": function (response) {
                    if (response.result === "200") {
                        toastr.success(`El registro fue agregado!`);
                        $('.field-word-glossary-new').text(word);
                        $('.field-description-glossary-new').text(description);

                        getGlossary();

                    } else {
                        toastr.error(response.message);
                    }
                }
            });
        });

        $(document).on('click', '.cancel-glossary-btn', function () {
            $(this).closest('tr').remove();
        });       
        //END: GLOSSARY SECTION
    });

    function getGlossary() {
        $("#glossary-tbody").empty();
        const documentHeaderId = $("#DocumentHeaderId").val();
       
        $.ajax({
            url: `/Documento/GetGlossary?documentHeaderId=${documentHeaderId}`,
            type: "POST",
            contentType: 'application/json; charset=utf-8',
            dataType: 'json'
        }).done(function (data) {
            console.log('DATA GetGlossary:', data)

            if (data.result === "200") {
                for (const item of data.message) {
                    const itemRow = '<tr>' +
                        `<td class="field-word-glossary">${item.Word}</td>` +
                        `<td class="field-description-glossary">${item.Description}</td>` +
                        '<td class="text-center">' +
                        `<input type="hidden" class="field-id-glossary" value="${item.Id}">` +
                        '<a class="btn btn-sm btn-success btn-edit-glossary" href="javascript:void(0)" title="Editar">Editar</a> ' +
                        ' <a class="btn btn-sm btn-danger btn-remove-glossary" href="javascript:void(0)" title="Eliminar">Eliminar</a>' +
                        '</td>' +
                        '</tr>';

                    $('#glossaryTable tbody').append(itemRow);
                }

                $('.btn-edit-glossary').click(function () {
                    var editButton = $(this);
               
                    if (editButton.prop('title') === "Editar") {
                        editButton.prop('title', 'Guardar');
                        editButton.html("Guardar");
                        editButton.closest('tr').find('.btn-remove-glossary').html("Cancelar");
                        editButton.closest('tr').find('.btn-remove-glossary').prop("title", "Cancelar");

                        const word = editButton.closest('tr').find('.field-word-glossary').text();
                        const description = editButton.closest('tr').find('.field-description-glossary').text();

                        wordGlossaryEditing = word;
                        descriptionGlossaryEditing = description;

                        editButton.closest('tr').find('.field-word-glossary').html('<input type="text" maxlength="50" min="3" class="form-control form-control-sm edit-word-glossary" value="' + word + '">');
                        editButton.closest('tr').find('.field-description-glossary').html('<input type="text" maxlength="800" min="3" class="form-control form-control-sm col-12 edit-description-glossary" value="' + description + '">');

                    } else {
                        const id = editButton.closest('tr').find('.field-id-glossary').val();
                        const word = editButton.closest('tr').find('.edit-word-glossary').val();
                        const description = editButton.closest('tr').find('.edit-description-glossary').val();

                        if (!word || !description) {
                            toastr.error("Debe completar todos los campos.");
                            return false;
                        }

                        $.ajax({
                            "url": `/Documento/UpdateGlossary?id=${id}&word=${word}&description=${description}`,
                            "type": "POST",
                            "success": function (response) {
                                if (response.result === "200") {
                                    toastr.success(`El registro #${id} fue actualizado!`);
                                    editButton.prop('title', 'Editar');
                                    editButton.closest('tr').find('.field-word-glossary').text(word);
                                    editButton.closest('tr').find('.field-description-glossary').text(description);

                                    editButton.html("Editar");
                                    editButton.closest('tr').find('.btn-remove-glossary').html("Eliminar");
                                    editButton.closest('tr').find('.btn-remove-glossary').prop("title", "Eliminar");
                                } else {
                                    toastr.error(response.message);
                                }
                            }
                        });
                    }
                });

                $('.btn-remove-glossary').click(function () {
                    var removeButton = $(this);

                    if (removeButton.html() === "Cancelar") {
                        removeButton.prop('title', 'Eliminar');
                        removeButton.html("Eliminar");

                        removeButton.closest('tr').find('.field-word-glossary').text(wordGlossaryEditing);
                        removeButton.closest('tr').find('.field-description-glossary').text(descriptionGlossaryEditing);

                        removeButton.closest('tr').find('.btn-edit-glossary').html("Editar");
                        removeButton.closest('tr').find('.btn-edit-glossary').prop("title", "Editar");
                    } else {
                        const id = removeButton.closest('tr').find('.field-id-glossary').val();
                        const word = removeButton.closest('tr').find('.field-word-glossary').text();

                        if (confirm(`Confirma que desea eliminar la palabra: ${word}`)) {
                            $.ajax({
                                "url": `/Documento/DeleteGlossary?id=${id}`,
                                "type": "POST",
                                "success": function (response) {
                                    if (response.result === "200") {
                                        toastr.success(`La palabra ${word} fue eliminada!`);
                                        getGlossary();
                                    } else {
                                        toastr.error(response.message);
                                    }
                                }
                            });
                        }
                    }
                });
            } else {
                toastr.error(data.message);
            }
        });
      
    }

    function saveDocumentContent(quill_contenidoBody) {
        //const content = $("#contenidoBody .ql-editor").html();
        const content = quill_contenidoBody.root.innerHTML;

        //if ($("#DocumentTypeId :selected").text().toUpperCase().includes("INSTRUCTIVO")) {
        const hasText = quill_contenidoBody.getText().trim();
        const hasImage = quill_contenidoBody.getContents().ops.some(op => op.insert && op.insert.image);

        if (hasText || hasImage) {
            const documentHeaderId = $("#DocumentHeaderId").val();

            const documentContent = { DocumentHeaderId: documentHeaderId, Body: content };

            $.ajax({
                url: `/Documento/SaveDocumentContent`,
                type: "POST",
                contentType: 'application/json; charset=utf-8',
                dataType: 'json',
                data: JSON.stringify(documentContent),
            }).done(function (data) {
                console.log('DATA SaveDocumentContent:', data)

                if (data.result === "200") {
                    toastr.success("El contenido del documento fue guardado.");
                } else {
                    toastr.error(data.message);
                }
            });
        } else {
            console.log('Do not save the content body');
        }
    }

    function saveDocumentDetail(quill_responsabilitiesBody, quill_policyBody) {
        const scope = $("#Scope").val();
        let responsabilities = quill_responsabilitiesBody.root.innerHTML;
        let policy = quill_policyBody.root.innerHTML;

        if (!quill_responsabilitiesBody.getText().trim()) responsabilities = "";
        if (!quill_policyBody.getText().trim()) policy = "";

        const documentHeaderId = $("#DocumentHeaderId").val();
        const documentDetail = { DocumentHeaderId: documentHeaderId, Scope: scope, Responsabilities: responsabilities, Policy: policy };

        $.ajax({
            url: `/Documento/SaveDocumentDetail`,
            type: "POST",
            contentType: 'application/json; charset=utf-8',
            dataType: 'json',
            data: JSON.stringify(documentDetail),
        }).done(function (data) {
            console.log('DATA SaveDocumentDetail:', data)
            if (data.result === "200") {
                toastr.success("Los detalles del documento fueron guardados.");
            } else {
                toastr.error(data.message);
            }
        });
    }

    async function getAreasByDirectorateId(directorateId, defaultArea = 0) {
        $("#AreaId").empty();
        console.log('defaultArea:', defaultArea)

        $.ajax({
            url: "/Area/GetAreasByDirectorateId?directorateId=" + directorateId,
            "type": "POST",
        }).done(async function (data) {
            if (data.result === "200") {

                for (const option of data.message) {
                    $('#AreaId').append($(`<option value="${option.Value}" ${parseInt(option.Value) === defaultArea ? "selected" : ""}>${option.Text}</option>`));
                }
            }
            else {
                toastr.error(data.message);
            }
        });
    }

    async function getDepartmentsByAreaId(areaId, defaultDepartment = 0) {
        $("#DepartmentCode").empty();

        $.ajax({
            url: "/Departamento/getDepartmentsByAreaId?areaId=" + areaId,
            "type": "POST",
        }).done(async function (data) {
            if (data.result === "200") {

                for (const option of data.message) {
                    $('#DepartmentCode').append($(`<option value="${option.Value}" ${parseInt(option.Value) === defaultDepartment ? "selected" : ""}>${option.Text}</option>`));
                }
            }
            else {
                toastr.error(data.message);
            }
        });
    }

    async function getProcessesByMacroprocessId(macroprocessId, defaultProcess = 0) {
        $("#ProcessId").empty();

        $.ajax({
            url: "/Proceso/getProcessesByMacroprocessId?macroprocessId=" + macroprocessId,
            "type": "POST",
        }).done(async function (data) {
            if (data.result === "200") {

                for (const option of data.message) {
                    $('#ProcessId').append($(`<option value="${option.Value}" ${parseInt(option.Value) === defaultProcess ? "selected" : ""}>${option.Text}</option>`));
                }
            }
            else {
                toastr.error(data.message);
            }
        });
    }

    async function getDocument(documentHeaderId, quill_contenidoBody, quill_responsabilitiesBody, quill_policyBody) {
       
        $.ajax({
            url: `/Documento/GetDocument?documentHeaderId=${documentHeaderId}`,
            type: "POST",
            contentType: 'application/json; charset=utf-8',
            dataType: 'json'
        }).done(async function (data) {
            console.log('DATA getDocument:', data)
           
            const documentHeader = data.message.documentHeader;
            const documentDetail = data.message.documentDetail;
            const documentContent = data.message.documentContent;

            await getAreasByDirectorateId(documentHeader.DirectorateId, documentHeader.AreaId);
            await getDepartmentsByAreaId(documentHeader.AreaId, documentHeader.DepartmentCode);
            await getProcessesByMacroprocessId(documentHeader.MacroprocessId, documentHeader.ProcessId);

            $("#DocumentTypeId").val(documentHeader.DocumentTypeId);
            $("#DocumentCode :selected").text(documentHeader.Code);

            $("#Revision").val(documentHeader.Revision);
            $("#docDate").val(documentHeader.Date);
            $("#Logo").val(documentHeader.Image);
            $("#Status").val(documentHeader.Status);

            $("#Title").val(documentHeader.Title);
            $("#DirectorateId").val(documentHeader.DirectorateId);
            $("#AreaId").val(documentHeader.AreaId);
            $("#DepartmentCode").val(documentHeader.DepartmentCode);
            $("#MacroprocessId").val(documentHeader.MacroprocessId);
            $("#ProcessId").val(documentHeader.ProcessId);

            $("#Objective").val(documentHeader.Objective);

            if (documentContent && documentContent.Body)
                quill_contenidoBody.root.innerHTML = documentContent.Body;

            if (documentDetail) {
                $("#Scope").text(documentDetail.Scope);
                quill_responsabilitiesBody.root.innerHTML = documentDetail.Responsabilities;
                quill_policyBody.root.innerHTML = documentDetail.Policy;
            }

            $(".btnDetail").show();

            applyChangesAccordingToDocumentType();
            prepareNextSection();
            getGlossary();
        });
    }

    function validateFields() {
        if (!$("#DocumentTypeId").val())
            return "Debe seleccionar un tipo de documento";

        if (!$("#DocumentCode").val())
            return "Debe seleccionar un código de documento";

        if (!$("#Revision").val())
            return "Debe especificar la revisión";

        if (!$("#docDate").val())
            return "Debe especificar una fecha válida";

        if (!$("#Title").val())
            return "Debe digitar un titulo";

        if (!$("#DirectorateId").val())
            return "Debe seleccionar la dirección";

        if (!$("#AreaId").val())
            return "Debe seleccionar el área";

        if (!$("#DepartmentCode").val())
            return "Debe seleccionar el departamento";

        if (!$("#MacroprocessId").val())
            return "Debe seleccionar un macroproceso";

        if (!$("#ProcessId").val())
            return "Debe seleccionar un proceso";
    }

    function applyChangesAccordingToDocumentType() {
        if ($("#DocumentTypeId :selected").text().toUpperCase().includes("INSTRUCTIVO")) {
            $("#contentLabel").text("Pasos");
            $("#sectionContent").show();
            $(".btnDetail").hide();
            $("#btnDetail").show();
        } 
    }

    function prepareNextSection() {
        $("#btnNext").text("Guardar cambios en la cabecera");

        if (!$("#DocumentTypeId :selected").text().toUpperCase().includes("INSTRUCTIVO")) {
            $("#sectionContent").show();
            $("#sectionScope").show();
            $("#sectionResponsabilities").show();
            $("#sectionGlossary").show();
            $("#sectionGuideline").show();
            $("#sectionPolicy").show();
            $("#sectionProcedure").show();
            $("#sectionReference").show();
            $("#sectionChange").show();
            $("#sectionApproval").show();
        } 
    }

    function GetEnglishDate(date) {
         if (date && date !== null) {
             const dateArray = date.split("/");
             return `${dateArray[1]}-${dateArray[0]}-${dateArray[2]}`;
         }

         return "";
    }

</script>